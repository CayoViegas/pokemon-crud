basePath: /
definitions:
  models.ErrorResponse:
    properties:
      errors:
        items:
          type: string
        type: array
    type: object
  models.Pokemon:
    properties:
      evolves_at:
        type: integer
      id:
        type: integer
      name:
        type: string
    required:
    - evolves_at
    - name
    type: object
  models.PokemonDTO:
    properties:
      evolves_at:
        maximum: 100
        minimum: 1
        type: integer
      name:
        maxLength: 30
        minLength: 2
        type: string
    required:
    - evolves_at
    - name
    type: object
  models.PokemonUpdateDTO:
    properties:
      evolves_at:
        maximum: 100
        minimum: 1
        type: integer
      name:
        maxLength: 30
        minLength: 2
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API para gerenciar a evolução dos pokemons
  title: Pokemon CRUD API
  version: "1.0"
paths:
  /pokemons:
    get:
      description: Retorna todos os Pokémons ordenados por nível de evolução, do menor
        para o maior
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Pokemon'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Lista Pokémons
      tags:
      - Pokémons
    post:
      consumes:
      - application/json
      description: Cria um novo Pokémon com nome e nível de evolução
      parameters:
      - description: Dados do Pokémon
        in: body
        name: pokemon
        required: true
        schema:
          $ref: '#/definitions/models.PokemonDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Pokemon'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Adiciona um novo Pokémon
      tags:
      - Pokémons
  /pokemons/{id}:
    delete:
      description: Remove um Pokémon pelo ID
      parameters:
      - description: ID do Pokémon
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Pokémon deletado com sucesso
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Deleta um Pokémon
      tags:
      - Pokémons
    patch:
      consumes:
      - application/json
      description: Atualiza as informações de um Pokémon pelo ID. Pelo menos um dos
        campos deve ser fornecido
      parameters:
      - description: ID do Pokémon
        in: path
        name: id
        required: true
        type: integer
      - description: Dados atualizados do Pokémon (Nome e/ou Nível de Evolução)
        in: body
        name: pokemon
        required: true
        schema:
          $ref: '#/definitions/models.PokemonUpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Pokemon'
        "400":
          description: 'Erro de validação: campos inválidos ou nenhum campo fornecido'
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Pokémon não encontrado
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Atualiza um Pokémon
      tags:
      - Pokémons
swagger: "2.0"
